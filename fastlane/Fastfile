# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.3.0"

default_platform :ios

platform :ios do
  before_all do
    puts "ðŸŒ¯ ðŸŒ¯ ðŸŒ¯ Doin' some fastlane ðŸŒ¯ ðŸŒ¯ ðŸŒ¯"
  end

  desc "Build IPA with janky macOS Sierra Keychain"
  lane :build_app_with_janky_keychain do
    # Be sure that your provisioning profiles are loaded in the app...

    # Now we do the dirty work of handling this crappy macOS Sierra bug
    # https://openradar.appspot.com/28524119
    # http://stackoverflow.com/questions/39868578/security-codesign-in-sierra-keychain-ignores-access-control-settings-and-ui-p

    # First, let's see if we have the jank keychain already, if we do, then
    # we delete it

    janky_keychain_name = "billy_goat_is_janky.keychain"

    if File.exist? (File.expand_path "~/Library/Keychains/#{janky_keychain_name}-db")
      delete_keychain(name: janky_keychain_name)

      puts "#{janky_keychain_name} has been deleted!"
    end

    # Now let's create the jank keychain

    create_keychain(name: janky_keychain_name,
                    timeout: "false",
                    unlock: "true",
                    password: "<change-this-to-whatever-you-want>")

    puts "#{janky_keychain_name} as been created!"

    # Ok, we have a temp keychain now, let's add all our certs

    dev_cert_path = File.expand_path("~/wherever-your-certs-are/a-cert-dev.p12")
    dis_cert_path = File.expand_path("~/wherever-your-certs-are/a-cert-dis.p12")

    import_certificate(keychain_name: janky_keychain_name,
                       keychain_password: "<whatever-it-is-you-made-it>",
                       certificate_path: dev_cert_path,
                       certificate_password: "<also-change-this-to-whatever-you-want>")

    puts "Imported #{dev_cert_path} into keychain #{janky_keychain_name}"

    import_certificate(keychain_name: janky_keychain_name,
                       keychain_password: "<whatever-it-is-you-made-it>",
                       certificate_path: dis_cert_path,
                       certificate_password: "<also-change-this-to-whatever-you-want>")

    puts "Imported #{dis_cert_path} into keychain #{janky_keychain_name}"

    # Since we have a janky keychain, let's unlock it and make it the default keychain

    unlock_keychain(path: janky_keychain_name,
                    password: "<Again-enter-it-here>",
                    set_default: "true")

    puts "Unlocking #{janky_keychain_name} and setting it as the default keychain"

    # Now we are ready to do a build...

    gym(scheme: "FastlaneApp",
        silent: true,
        clean: true,
        include_symbols: true,
        include_bitcode: true)

    # We are done, so let's set the login keychain back as the default, we can do this
    # with the unlock_keychain action

    login_keychain = "login"

    unlock_keychain(path: login_keychain,
                    password: "<login-keychain-password>",
                    set_default: "true")

    puts "Unlocking #{login_keychain} and setting it as the default keychain"

    # Finally, we delete the janky keychain

    delete_keychain(name: janky_keychain_name)

    puts "#{janky_keychain_name} has been deleted!"

    puts "The jank is over..."
    puts ""

    # =(
  end

  after_all do |lane|
    puts "ðŸŒ® ðŸŒ® ðŸŒ®  Taco Time! ðŸŒ® ðŸŒ® ðŸŒ®"
  end

  error do |lane, exception|
    puts "Uh oh..."
  end
end

# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
